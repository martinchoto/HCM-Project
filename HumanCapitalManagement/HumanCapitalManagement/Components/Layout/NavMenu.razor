@implements IDisposable

@inject NavigationManager NavigationManager
<AuthorizeView>
    <Authorized>
        <div class="nav-item d-flex flex-row text-primary">
            <a class="nav-link mb-1 text-black btn btn-primary" href="/personal">
                <i class="bi bi-person-fill"></i> Hello, @context.User.Identity?.Name!
            </a>
            <form action="/Account/Logout" method="post" class="d-inline">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="nav-link btn btn-link text-black p-0">
                    <i class="bi bi-box-arrow-left"></i> Logout
                </button>
            </form>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="nav-item">
            <a class="nav-link text-black btn btn-primary" href="/login">
                <i class="bi bi-box-arrow-in-right"></i> Login
            </a>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
	private string? currentUrl;

	protected override void OnInitialized()
	{
		currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
		NavigationManager.LocationChanged += OnLocationChanged;
	}

	private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
	{
		currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
		StateHasChanged();
	}

	public void Dispose()
	{
		NavigationManager.LocationChanged -= OnLocationChanged;
	}
}

